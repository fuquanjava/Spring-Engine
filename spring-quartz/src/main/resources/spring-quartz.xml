<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/cache 
    	http://www.springframework.org/schema/cache/spring-cache.xsd">

	<bean id="quartzConfigServer" class="quartz.manager.config.QuartzConfigServer">
		<property name="dataSourceKey" value="${org.quartz.jobStore.dataSource.key}" />
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.scheduler.instanceName">${org.quartz.scheduler.instanceName}</prop>
				<prop key="org.quartz.scheduler.instanceId">${org.quartz.scheduler.instanceId}</prop>
				<prop key="org.quartz.threadPool.class">${org.quartz.threadPool.class}</prop>
				<prop key="org.quartz.threadPool.threadCount">${org.quartz.threadPool.threadCount}</prop>
				<prop key="org.quartz.threadPool.threadPriority">${org.quartz.threadPool.threadPriority}</prop>
				<prop key="org.quartz.jobStore.misfireThreshold">${org.quartz.jobStore.misfireThreshold}</prop>
				<prop key="org.quartz.jobStore.class">${org.quartz.jobStore.class}</prop>
				<prop key="org.quartz.jobStore.driverDelegateClass">${org.quartz.jobStore.driverDelegateClass}</prop>
				<prop key="org.quartz.jobStore.useProperties">${org.quartz.jobStore.useProperties}</prop>
				<prop key="org.quartz.jobStore.dataSource">${org.quartz.jobStore.dataSource}</prop>
				<prop key="org.quartz.jobStore.tablePrefix">${org.quartz.jobStore.tablePrefix}</prop>
				<prop key="org.quartz.jobStore.isClustered">${org.quartz.jobStore.isClustered}</prop>
				<prop key="org.quartz.jobStore.clusterCheckinInterval">${org.quartz.jobStore.clusterCheckinInterval}</prop>
			</props>
		</property>
		<property name="autoStartup" value="${org.quartz.auto.startup}" />
		<property name="isDefault" value="${org.quartz.isDefault}" />
	</bean>

	<bean id="dynamicQuartz" class="quartz.manager.source.DynamicQuartz" />

	<bean id="dynamicCreateQuartzManager" class="quartz.manager.source.DynamicCreateQuartzManager">
		<property name="dynamicQuartz" ref="dynamicQuartz" />
	</bean>

	<bean id="quartzManager" class="quartz.manager.component.QuartzManager">
		<property name="dynamicQuartz" ref="dynamicQuartz" />
	</bean>
	  
	<bean id="countOrderInitialJob" class="quartz.manager.job.InitialJob">
		<property name="quartzParameter.jobName" value="订单统计任务" />
		<property name="quartzParameter.jobGroup" value="订单任务组" />
		<property name="quartzParameter.jobBeanName" value="countOrderJob" />
		<property name="quartzParameter.description" value="统计每日的订单总量并且分组" />
		<property name="quartzParameter.isRecovery" value="false" />
		<property name="quartzParameter.triggerName" value="每分钟执行的订单统计" />
		<property name="quartzParameter.triggerGroup" value="订单触发器组" />
		<property name="quartzParameter.isCronTrigger" value="true" />
		<property name="quartzParameter.expression" value="0 */1 * * * ?" />
		<property name="quartzParameter.extraInfo">
			<map>
				<entry key="extra" value="test" />
			</map>
		</property>
	</bean>
	
</beans>
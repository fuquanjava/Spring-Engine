<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--目标对象（Target Object）-->
    <bean name="userService" class="spring.aop.service.impl.UserServiceImpl" />

    <!--方面/切面（Aspect）：横切关注点的模块化-->
    <bean name="xmlLogger" class="spring.aop.log.OptXMLLogger" />

<!--    <aop:config >
        <aop:pointcut id="pointcut" expression="execution(* spring.aop.service..*(..))"/>
        <aop:aspect ref="xmlLogger">
            <aop:before method="beforeLogger" pointcut-ref="pointcut" />
            &lt;!&ndash;切入点除了使用pointcut-ref属性来引用已经存在的切入点，也可以使用pointcut属性来定义&ndash;&gt;
            <aop:after method="afterLogger" pointcut="execution(* spring.aop.service..*(..))" />
        </aop:aspect>
    </aop:config>-->

    <!--before配置  -->
    <aop:config>
        <aop:aspect ref="xmlLogger">
            <!--<aop:before method="beforeAdvice(java.lang.Integer)"-->
            <aop:before method="beforeAdvice(java.lang.String)"
                        pointcut="execution(* spring.aop.service..*(..)) and args(param)"
                        arg-names="param" />

            <aop:after-returning method="afterReturningLogger" pointcut="execution(* spring.aop.service..*(..))"
                       arg-names="returnValue"
                       returning="returnValue" />

        </aop:aspect>
    </aop:config>

</beans>